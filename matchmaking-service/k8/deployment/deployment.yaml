apiVersion: apps/v1
kind: Deployment
metadata:
  name: matchmaking-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: matchmaking-service
  template:
    metadata:
      labels:
        app: matchmaking-service
    spec:
      containers:
      - name: matchmaking-service
        image: imrajsingh/matchmaking-service-image
        # image: e0774189614/cs3219
        ports:
        - containerPort: 8002
        env:
        - name: KAFKA_PRODUCER_USERNAME
          value: user1
        - name: KAFKA_PRODUCER_PASSWORD
          value: "5PipD4K1m7" 
          #  put the decoded password from kafka-user-passwords.client-passwords
          # kubectl get secret kafka-user-passwords --namespace default -o jsonpath='{.data.client-passwords}'
        - name: NODE_ENV
          value: "production"
        - name: AMQP_HOST
          value: "rabbitmq.default.svc.cluster.local:5672"
        - name: KAFKA_HOST
          value: "kafka.default.svc.cluster.local:9092"
        - name: KAFKAJS_NO_PARTITIONER_WARNING
          value: "1"
        - name: ZOOKEEPER_HOST
          value: "zookeeper.default.svc.cluster.local:2181"
        - name: RABBITMQ_USERNAME
          value: "user" # Set your RabbitMQ username here
        - name: RABBITMQ_PASSWORD
          valueFrom:
            secretKeyRef:
              name: rabbitmq # Name of the secret containing RabbitMQ password
              key: rabbitmq-password 

        resources:
          requests:
            memory: "128Mi"
            cpu: "500m"
          limits:
            memory: "256Mi"
            cpu: "1000m"